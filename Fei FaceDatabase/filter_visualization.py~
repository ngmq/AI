import numpy as np
from keras.models import Model, load_model
import keras.backend as K
from scipy.misc import imsave
import time


img_width = 128
img_height = 128

layer_name = 'block5_conv1'

# util function to convert a tensor into a valid image


def deprocess_image(x):
    # normalize tensor: center on 0., ensure std is 0.1
    x -= x.mean()
    x /= (x.std() + 1e-5)
    x *= 0.1

    # clip to [0, 1]
    x += 0.5
    x = np.clip(x, 0, 1)

    # convert to RGB array
    x *= 255
    if K.image_data_format() == 'channels_first':
        x = x.transpose((1, 2, 0))
    x = np.clip(x, 0, 255).astype('uint8')
    return x

model = load_model('Results/Normal Initialization - SGD - 0003 - train size 80 - not divide data like in paper/model.h5')
model.summary()

layer_dict = dict([(layer.name, layer) for layer in model.layers])

print(layer_dict)


